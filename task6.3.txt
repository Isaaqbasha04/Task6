
Part 3: Find the culprits and nail them — debugging javascript

Fix the code to get the largest of three.

Code:

aa = (f,s,t) => {
 //let f,s,t;
 console.log(f,s,t);
 if(f>s &&f>t){
 console.log(f)}
 else if(s>f && s>t){
 console.log(s)}
 else{
 console.log(t)}
}
aa(1,2,3);


Fix the code to Sum of the digits present in the number

Code:

let n = "123";
console.log(add(n));
function add(n)
{
let sum = 0;
for(var i=0;i<n.length;i++){
 sum+= parseInt(n[i])

 }
 return sum;
}


Fix the code to Sum of all numbers using IIFE function

Code:

const arr = [9,8,5,6,4,3,2,1];
(function() {
 let sum = 0;
 for (var i = 0; i < arr.length; i++){
 sum += arr[i];
 }
 console.log(sum);
 return sum;
})();



Fix the code to gen Title caps.

Code:

var arr = ["guvi", "geek", "zen", "fullstack"];
var ano = function(arro) {
 for (var i = 0; i <= arr.length; i++) {
 console.log(arr[i].toUpperCase() + arr[i].substr(1));
 }
}
ano();

 Fix the code to return the Prime numbers


 const newArray=[1,3,2,5,10];
 const myPrime=newArray.filter(num=>{
 for(let i=2;i<num;i++){
 if(num%i===0)
  {
  return false;
 }
  }
  return num>1;
 });
 console.log(myPrime);


 Fix the code to sum the number in that array

 const num = [10, 20, 30, 40,50,60,70,80,90,100] 
 var sum = (a, b) =>
  a + b
 var sum = num.reduce(sum)
 console.log(sum);


print all odd numbers in an array using IIFE function

var arr = [1, 2, 3, 5, 7, 79, 7, 2, 6, 9, 4];
(function() {
 for (var i = 0; i < arr.length; i++) {
 if (arr[i] % 2 != 0) {
 console.log(arr[i]);
 }}
})();


Fix the code to reverse.


(function(str){
 str1 = str.split("").reverse().join("");
 console.log(str1); 
})("abcd")





